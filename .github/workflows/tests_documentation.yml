# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Tests and Documentation

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  PDOC_ALLOW_EXEC: 1

permissions:
  contents: write
  pull-requests: write

jobs:
  build:

    runs-on: ubuntu-latest
    
    steps:
    - name: Remove unnecessary files
      run: |
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
    - uses: actions/checkout@v4
      with:
        submodules: true
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
        cache: 'pip'
    - name: Upgrade pip
      run: python -m pip install --upgrade pip
    - name: Install dependencies
      run: |
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: List all available pip updates
      run: pip list --outdated
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude custom_models
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --exclude custom_models
    - name: Test with pytest
      env: # Or as an environment variable
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
      run: pytest --ignore custom_models/

    - name: Documentation with pdoc
      run: pdoc ./*.py ./utils/*.py -o docs
    - uses: actions/upload-pages-artifact@v3
      with:
        path: docs/

    - name: Pull request for updated documentation
      uses: peter-evans/create-pull-request@v7
      with:
        title: '[pdoc] Updated documentation'
        commit-message: Update documentation
        delete-branch: true
        labels: documentation
        add-paths: docs/*

  # Deploy the artifact to GitHub pages PUBLICLY.
  # This is a separate job so that only actions/deploy-pages has the necessary permissions.
  # https://github.com/mitmproxy/pdoc/blob/main/.github/workflows/docs.yml