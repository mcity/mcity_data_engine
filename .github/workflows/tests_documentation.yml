name: Tests and Docs

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  PDOC_ALLOW_EXEC: 1

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Cleanup unnecessary files
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: List outdated pip packages
        run: pip list --outdated

  lint:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install flake8
        run: pip install flake8

      - name: Run flake8 linting
        run: |
          # Fail on critical syntax issues
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude custom_models
          # Warnings and complexity checks
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --exclude custom_models

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run pytest
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: pytest -s --ignore custom_models/ --ignore tests/workflow_aws_download_test.py --ignore tests/workflow_zero_shot_od_test.py

  documentation:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install pdoc
        run: pip install pdoc

      - name: Generate documentation
        run: pdoc ./*.py ./utils/*.py -o docs

      - name: Upload documentation artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/

      - name: Create pull request for updated documentation
        uses: peter-evans/create-pull-request@v7
        with:
          base: main
          title: "[pdoc] Updated documentation"
          commit-message: "Update documentation"
          delete-branch: true
          labels: documentation
          add-paths: docs/*

  deploy:
    runs-on: ubuntu-latest
    needs: documentation

    steps:
      - name: Deploy documentation to GitHub Pages
        uses: actions/deploy-pages@v1
